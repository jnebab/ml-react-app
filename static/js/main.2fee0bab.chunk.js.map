{"version":3,"sources":["tiger.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","predictions","setPredictions","imageURL","setImageURL","useEffect","classifier","ml5","console","log","image","document","getElementById","predict","err","results","classifyImg","className","style","textAlign","type","alt","padding","width","marginBottom","onChange","e","target","value","src","Tiger","id","height","crossOrigin","length","map","prediction","index","probability","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6MAAe,MAA0B,kC,OCwD1BA,MAjDf,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNC,EADM,KACOC,EADP,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,KAyBb,OAJAC,qBAAU,YAjBU,WAClB,IAAMC,EAAaC,kBAAoB,aAEvC,WACEC,QAAQC,IAAI,oBAGRC,EAAQC,SAASC,eAAe,SAElCN,GACFA,EAAWO,QAAQH,EAAO,GAAG,SAACI,EAAKC,GACjCP,QAAQC,IAAI,CAACM,YACbb,EAAea,MAMnBC,KACC,CAACb,IAGF,qBAAKc,UAAU,MAAMC,MAAO,CAAEC,UAAW,UAAzC,SACE,yBAAQF,UAAU,aAAlB,UACE,+CACA,8BACE,uBAAOG,KAAK,OAAOC,IAAI,kBAAkBH,MAAO,CAAEI,QAAS,WAAYC,MAAO,IAAKC,aAAc,IAAMC,SAAU,SAAAC,GAAC,OAAItB,EAAYsB,EAAEC,OAAOC,YAE7I,qBACEC,IAAK1B,GAAY2B,EACjBT,IAAI,QACJU,GAAG,QACHb,MAAO,CAAEK,MAAO,MAAOS,OAAQ,OAC/BC,YAAY,eAEF,OAAXhC,QAAW,IAAXA,OAAA,EAAAA,EAAaiC,QAAS,EACrBjC,EAAYkC,KAAI,SAACC,EAAYC,GAAb,OAAuB,qCAAE,4BAAgBD,EAAWnB,WAAnBoB,GAAiC,sCAAgC,IAAzBD,EAAWE,YAAlB,sBAElF,+DCrCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAM1B2B,M","file":"static/js/main.2fee0bab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tiger.c9976d9c.jpg\";","import React, { useEffect, useState } from \"react\"\nimport Tiger from \"./tiger.jpg\"\n// import Woman from \"./woman.jpg\"\n// import Laptop from \"./laptop.jpg\"\n\nimport * as ml5 from \"ml5\"\n\nfunction App() {\n  const [predictions, setPredictions] = useState([])\n  const [imageURL, setImageURL] = useState(\"\")\n\n  const classifyImg = () => {\n    const classifier = ml5.imageClassifier(\"MobileNet\", modelLoaded)\n\n    function modelLoaded() {\n      console.log(\"Model loaded!\")\n    }\n\n    const image = document.getElementById(\"image\")\n\n    if (classifier) {\n      classifier.predict(image, 5, (err, results) => {\n        console.log({results})\n        setPredictions(results)\n      })\n    }\n  }\n\n  useEffect(() => {\n    classifyImg()\n  }, [imageURL])\n\n  return (\n    <div className=\"App\" style={{ textAlign: \"center\" }}>\n      <header className=\"App-header\">\n        <h3>ML with React</h3>\n        <div>\n          <input type=\"text\" alt=\"image-url-input\" style={{ padding: '5px 10px', width: 350, marginBottom: 15 }} onChange={e => setImageURL(e.target.value)} />\n        </div>\n        <img\n          src={imageURL || Tiger}\n          alt=\"tiger\"\n          id=\"image\"\n          style={{ width: \"50%\", height: \"50%\" }}\n          crossOrigin=\"anonymous\"\n        />\n        {predictions?.length > 0 ? (\n          predictions.map((prediction, index) => <><p key={index}>{prediction.className}</p><p>{`${prediction.probability * 100}% accurate`}</p></>)\n        ) : (\n          <div>Loading predictions...</div>\n        )}\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}